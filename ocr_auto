import time
import sys
from datetime import datetime
import subprocess
import glob
import os
import re
from tqdm import tqdm
from rapid_videocr import RapidVideOCR
from shutil import move


# 这里是需要提取字幕的视频所在的目录，放多个视频，批量处理。
# videos/1.mp4, videos/2.mp4 这样存放，系统会读取所有的视频文件
# 经测试，视频文件名是中文也可以
# 通过参数传递，比如 python ocr_auto.py "D:\projects\videos"
videos_dir = sys.argv[1]

#修改成自己电脑上VideoSubFinderWXW.exe所在路径
videosubexe = r"D:\VideoSubFinder_6.10_x64\Release_x64\VideoSubFinderWXW.exe"

#这个不用管，会在上面videos_dir中增加一个临时文件夹
tmp_dir = videos_dir + r"\tmp"

#读取要处理的文件，创建视频名的子文件夹，并将视频移进去
video_formats = ('.mp4', '.avi', '.mov', '.mkv') #支持的视频格式
for file in os.listdir(videos_dir):
    if file.endswith(video_formats):
        # Get video name without extension
        video_name = os.path.splitext(file)[0]
        print(video_name)
        # Create subfolder with video name    
        video_subfolder = os.path.join(videos_dir, video_name)
        os.mkdir(video_subfolder)
        # Move file to subfolder
        move(os.path.join(videos_dir, file), video_subfolder)

#读取子文件夹目录
def get_immediate_subdirectories(videos_dir):
    return [name for name in os.listdir(videos_dir)
            if os.path.isdir(os.path.join(videos_dir, name))]
subfolder_names = get_immediate_subdirectories(videos_dir)


# 这里是videosubfinder提取关键帧
def extract_subtitle(video_path):
    print("Extracting subtitle images with VideoSubFinder (takes quite a long time) ...")
    startTime = time.time()
    subprocess.run([
        videosubexe, 
        "--clear_dirs", 
        "--run_search", 
        "--create_cleared_text_images", 
        "--input_video", video_path, 
        "--output_dir", tmp_dir,
        "--num_threads", str(30), # 数字越大，速度越快，跟CPU性能也有关
        "--num_ocr_threads", str(30),
        "--top_video_image_percent_end", str(0.25), #字幕区域顶部所在百分比，根据要处理的视频来调整，
        "--bottom_video_image_percent_end", str(0.0) #字幕区域底部所在百分比，
    ], capture_output=True)
    endTime = time.time()
    print("Completed! Took "+str(endTime - startTime)+"s")

#这个是RapidVideOCR提取字幕
def get_subtitle_RapidVideOCR(result_dir):
    # RapidVideOCR有两个初始化参数
    # is_concat_rec: 是否用单张图识别，默认是False，也就是默认用单图识别
    # concat_batch: 叠图识别的图像张数，默认10，可自行调节
    # out_format: 输出格式选择，[srt, txt, all], 默认是 all
    # is_print_console: 是否打印结果，[0, 1], 默认是0，不打印
    extractor = RapidVideOCR(is_concat_rec=False,
                             out_format='all',
                             is_print_console=False)
    
    # Windows端，需要这样写： rgb_dir = r'G:\ProgramFiles\_self\RapidVideOCR\test_files\RGBImages'
    # Linux / Mac 下面这样写
    rgb_dir = tmp_dir + r'\RGBImages' 
    start_time = datetime.now()
    print(f"开始提取字幕...... {start_time:%H:%M:%S}")
    
    extractor(rgb_dir, result_dir)
    
    end_time = datetime.now()     
    print(f"字幕提取结束...... {end_time:%H:%M:%S}")


#开始执行任务
startAt = datetime.now()
print(f"开始任务，本次任务共计{len(subfolder_names)}个视频……{startAt:%H:%M:%S}")

for i in range(len(subfolder_names)):
    subfolder = subfolder_names[i]
    sub_path = os.path.join(videos_dir, subfolder)
    if os.path.exists(os.path.join(sub_path, "result.txt")):
        print("已有字幕, 跳过...")  #自动跳过已经有字幕的文件
    else:
        video_name = [f for f in os.listdir(sub_path) 
                      if f.endswith(video_formats)] 
        if video_name:  
            video_name = video_name[0]
            #提取关键帧
            video_path = os.path.join(sub_path, video_name)
            print("正在提取文件：" + video_path)
            extract_subtitle(video_path)
            
            #提取字幕
            get_subtitle_RapidVideOCR(sub_path)
        else:
            print("No video files found")
        
endAt = datetime.now()
totalTime = str(endAt - startAt)
print(f"全部提取结束，本次任务共计{len(subfolder_names)}个视频,耗时  {totalTime} 秒")
